# -*- ini -*-
[buildout]

parts =
    zope2
    instance
    zopepy
    plone
    productdistros
    productcheckouts
    test
    test-recorder

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org
    http://download.zope.org/ppix/
    http://download.zope.org/distribution/
    http://effbot.org/downloads

# Add additional eggs here
eggs =
    simplejson 

# Reference any eggs you are developing here, one per line
# e.g.: develop = src/my.package
develop =
    src/Products.PloneGetPaid
    src/zc.table
    src/zc.resourcelibrary
    src/five.intid
    src/yoma.batching
    src/ore.viewlet
    src/hurry.workflow
    src/getpaid.core
    src/getpaid.wizard
#    src/getpaid.io
    src/getpaid.nullpayment
#    src/getpaid.flatrateshipping
#    src/getpaid.warehouse
#    src/getpaid.ups
#    src/getpaid.report
#    src/getpaid.paymentech
#    src/getpaid.discount
#    ${googlecheckout:develop}
#    src/getpaid.authorizedotnet
#    src/zc.authorizedotnet
#    src/getpaid.paypal
    recipes

versions = versions

[versions]
# Pin any package versions here if wanted.


[plone]
recipe = plone.recipe.plone25install
url = https://launchpad.net/plone/2.5/2.5.5/+download/Plone-2.5.5.tar.gz

# Use this section to download additional old-style products.
# List any number of URLs for product tarballs under URLs (separate
# with whitespace, or break over several lines, with subsequent lines
# indented). If any archives contain several products inside a top-level
# directory, list the archive file name (i.e. the last part of the URL, 
# normally with a .tar.gz suffix or similar) under 'nested-packages'.
# If any archives extract to a product directory with a version suffix, list
# the archive name under 'version-suffix-packages'.
[productdistros]
recipe = plone.recipe.distros
urls =
    http://codespeak.net/z3/five/release/Five-1.4.2.tgz
nested-packages =
version-suffix-packages = 

# Use this section to make a subversion checkout of additional
# old-style products.
[productcheckouts]
recipe = infrae.subversion
urls =
    http://codespeak.net/svn/z3/CMFonFive/trunk/ CMFonFive

[test-recorder]
recipe = infrae.subversion
urls =
    svn://svn.zope.org/repos/main/zope.testrecorder/trunk/src/zope/testrecorder testrecorder

[zope2]
recipe = plone.recipe.zope2install
url = ${plone:zope2-url}

[test]
recipe = zc.recipe.testrunner
eggs = ${buildout:eggs}
       getpaid.core
#       getpaid.io
       getpaid.nullpayment
       hurry.workflow
#       getpaid.warehouse
#       getpaid.report
#       getpaid.ups

extra-paths = ${zope2:location}/lib/python

[instance]
recipe = plone.recipe.zope2instance
zope2-location = ${zope2:location}
user = admin:admin
http-address = 51113
debug-mode = on
verbose-security = on

# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = ${buildout:eggs} ${plone:eggs} my.package
eggs =
    ${buildout:eggs}
    ${plone:eggs}
    Products.PloneGetPaid
    zc.resourcelibrary
    zc.table
    five.intid
    yoma.batching
    ore.viewlet
    hurry.workflow
    getpaid.core
    getpaid.wizard
    getpaid.nullpayment
#    getpaid.io
#    getpaid.flatrateshipping  
#    PdbTextMateSupport
#    getpaid.warehouse
#    getpaid.report
#    getpaid.ups
#    getpaid.paymentech
#    getpaid.discount
#    zc.authorizedotnet
#    getpaid.authorizedotnet
#    ${googlecheckout:eggs}
#    getpaid.paypal

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml =
#    getpaid.discount-configure
#    getpaid.discount-overrides
#    ${googlecheckout:zcml}

products =
#    ${buildout:directory}/develop-products
    ${productdistros:location}
    ${buildout:directory}/parts/productcheckouts
    ${plone:products}
#    ${buildout:directory}/develop-debug
    ${buildout:directory}/parts/test-recorder


[zopepy]
recipe = zc.recipe.egg
eggs = 
     ${instance:eggs}
interpreter = zopepy
extra-paths = ${zope2:location}/lib/python


[cleanup]
recipe = recipes:cleanup

[ipzope]
# a IPython Shell for interactive use with zope running. you also need to put
# https://svn.plone.org/svn/collective/dotipython/trunk/ipy_profile_zope.py
# to your $HOME/.ipython directory for the following to work.
#recipe = zc.recipe.egg
#eggs =
#   ipython
#   ${instance:eggs}
#initialization =
#    import sys, os
#    os.environ["SOFTWARE_HOME"] = "${zope2:location}/lib/python"
#    os.environ["INSTANCE_HOME"] = "${instance:location}"
#    sys.argv[1:1] = "-p zope".split()
#extra-paths = ${zope2:location}/lib/python
#scripts = ipython=ipzope

[googlecheckout]
develop =
    src/gchecky
    src/getpaid.googlecheckout
eggs =
    gchecky
    getpaid.googlecheckout
zcml =
    getpaid.googlecheckout-overrides
